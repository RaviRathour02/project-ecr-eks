name: Java CI with Maven
![example branch parameter.](https://github.com/RaviRathour02/project-ecr-eks/.github/workflows/ravi.yml/badge.svg?branch=main)
on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4
    - name: Set up JDK 17
      uses: actions/setup-java@v4
      with:
        java-version: '17'
        distribution: 'temurin'
        cache: maven
    - name: Build with Maven
      run: mvn -B package --file pom.xml

    - name: Upload build artifact
      uses: actions/upload-artifact@v4
      with:
        name: war-file
        path: /home/runner/work/jenkins-pr/jenkins-pr/webapp/target/*.war

    - name: List build directory contents
      run: ls -la /home/runner/work/jenkins-pr/jenkins-pr/webapp/target

    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: ap-south-1
    - name: Log in to Amazon ECR
      id: login-ecr
      uses: aws-actions/amazon-ecr-login@v1
    
    - name: Build Docker image
      run: |
        docker build -t github-repo .
        docker tag github-repo:latest 559050231342.dkr.ecr.ap-south-1.amazonaws.com/github-repo:latest

    - name: Push Docker image to ECR
      run: |
        docker push 559050231342.dkr.ecr.ap-south-1.amazonaws.com/github-repo:latest
   
    - name: Set up kubectl
      uses: azure/setup-kubectl@v1
      with:
        version: v1.31.0
    - name: Update kubeconfig
      run: |
        aws eks update-kubeconfig --name my-cluster --region ap-south-1

    - name: Deploy to EKS
      env:
        ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
        ECR_REPOSITORY: github-repo
        IMAGE_TAG: ${{ github.sha }}
      run: |
        kubectl rollout restart deployment/regapp-deployment 
    
    
           
